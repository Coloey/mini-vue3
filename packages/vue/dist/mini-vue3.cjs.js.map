{"version":3,"file":"mini-vue3.cjs.js","sources":["../../shared/src/shapeFlag.ts","../../shared/src/toDisplayString.ts","../../shared/src/index.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/h.ts","../../runtime-core/src/createApp.ts","../../runtime-core/src/componentEmits.ts","../../runtime-core/src/componentProps.ts","../../runtime-core/src/componentSlots.ts","../../reactivity/src/dep.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/component.ts","../../runtime-core/src/apiInject.ts","../../runtime-core/src/helpers/renderSlot.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/componentRenderUtils.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/apiWatch.ts","../../runtime-dom/src/index.ts","../../compiler-core/src/runtimeHelpers.ts","../../compiler-core/src/codegen.ts","../../compiler-core/src/transform.ts","../../compiler-core/src/transforms/transformExpression.ts","../../compiler-core/src/utils.ts","../../compiler-core/src/transforms/transformText.ts","../../compiler-core/src/ast.ts","../../compiler-core/src/transforms/transfromElement.ts","../../compiler-core/src/parse.ts","../../compiler-core/src/compile.ts","../src/index.ts"],"sourcesContent":["//组件类型\r\nexport const enum ShapeFlags {\r\n    //最后要渲染的element类型\r\n    ELEMENT = 1,\r\n    //组价类型\r\n    STATEFUL_COMPONENT = 1 << 2,\r\n    //vnode中children为string类型\r\n    TEXT_CHILDREN = 1 << 3,\r\n    //vnode中children位数组类型\r\n    ARRAY_CHILDREN = 1 << 4,\r\n    //vnode中children为slots类型\r\n    SLOTS_CHILDREN = 1 << 5\r\n}","export const toDisplayString = (val) => {\r\n    return String(val)\r\n}","export * from \"../src/shapeFlag\"\r\nexport * from \"../src/toDisplayString\"\r\nexport const isObject = (value) =>{\r\n  return typeof value === 'object' && value !== null\r\n}\r\n   \r\n/**\r\n * 判断函数\r\n */\r\nexport const isFunction= (value) =>{\r\n   return typeof value === 'function'\r\n}\r\n​\r\n/**\r\n * 判断字符串\r\n */\r\nexport const isString = (value) => {\r\n   return typeof value === 'string'\r\n}\r\n​\r\n/**\r\n * 判断数字\r\n */\r\nexport const isNumber =(value)=>{\r\n   return typeof value === 'number'\r\n}\r\n​\r\n/**\r\n * 判断数组\r\n */\r\nexport const isArray = Array.isArray\r\nexport const extend = Object.assign\r\nexport function hasChanged(value,oldValue) {\r\n\treturn !Object.is(value,oldValue)\r\n}\r\n//转为驼峰\r\nconst camelizeRE=/(-)(\\w)/g\r\nexport const camelize = (str: string):string => {\r\n\treturn str.replace(camelizeRE,(_,c)=>(c ? c.toUpperCase() : \"\"))\r\n}\r\nexport function hasOwn(val,key){\r\n\treturn Object.prototype.hasOwnProperty.call(val,key)\r\n}\r\n//首字母大写\r\nexport const capitalize = (str: string) =>\r\n\tstr.charAt(0).toUpperCase()+str.slice(1)\r\nexport const isOn = key => /^on[A-Z]$/.test(key)\r\n//添加on前缀，并且首字母大写\r\nexport const toHandlerKey = (str: string) => \r\n\tstr ? `on${capitalize(str)}` : ``\r\n//用来匹配kebab-case的情况\r\n/*比如onTest-event 可以匹配到T,取到T在前面加一个 - \\B可以匹配到大写字母\r\n前面那个位置，加一个- */\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n//驼峰转烤肉串\r\nexport const hyphenate = (str: string) => \r\n\tstr.replace(hyphenateRE,'-$1').toLowerCase()","import { ShapeFlags } from \"@mini-vue3/shared\";\r\nexport {createVNode as createElementVNode}\r\n\r\nexport const createVNode = function(\r\n    type: any,\r\n    props?: any,\r\n    children?: string | Array<any>\r\n) {\r\n    //type为string:createVNode(\"div\")\r\n    //type 为组件对象:createVNode(App)\r\n    const vnode = {\r\n        el: null,\r\n        component: null,\r\n        key: props?.key,\r\n        type,\r\n        props: props || {},\r\n        children,\r\n        shapeFlag: getShapeFlag(type)\r\n    }\r\n    //基于children再设置shapeFlag\r\n    if(Array.isArray(children)){\r\n        vnode.shapeFlag |= ShapeFlags.ARRAY_CHILDREN\r\n    }else if(typeof children === \"string\") {\r\n        vnode.shapeFlag |= ShapeFlags.TEXT_CHILDREN\r\n    }\r\n    normalizeChildren(vnode,children)\r\n    return vnode\r\n}\r\nexport function normalizeChildren(vnode,children) {\r\n    if(typeof children === 'object'){\r\n         //暂时表示出slots_children类型，暂时只有element和component类型组件\r\n        if(vnode.shapeFlag & ShapeFlags.ELEMENT){\r\n            //这里是element\r\n        }else{\r\n            //这里是slots\r\n            vnode.shapeFlag |= ShapeFlags.SLOTS_CHILDREN\r\n        }\r\n    } \r\n}\r\nexport const Text = Symbol(\"Text\")\r\nexport const Fragment =Symbol(\"Fragment\")\r\nexport function createTextVNode(text: string='') {\r\n    return createVNode(Text,{},text)\r\n}\r\n//标准化vnode的格式\r\nexport function normalizeVNode(child) {\r\n    //暂时只支持处理child为string 和number的情况\r\n    if(typeof child === 'string' || typeof child === 'number') {\r\n        return createVNode(Text,null,String(child))\r\n    }else{\r\n        return child\r\n    }\r\n}\r\nfunction getShapeFlag(type: any) {\r\n    return typeof type === \"string\"\r\n    ? ShapeFlags.ELEMENT\r\n    : ShapeFlags.STATEFUL_COMPONENT\r\n}","import {createVNode} from './vnode'\r\nexport const h = (type: any, props:any = null, children:string|Array<any>=[])=>{\r\n    return createVNode(type,props,children)\r\n}","import {createVNode} from \"./vnode\"\r\nexport function createAppAPI(render) {\r\n    return function createApp(rootComponent) {\r\n        const app = {\r\n            _component: rootComponent,\r\n            mount(rootContainer){\r\n                console.log(\"基于根组件创建vnode\")\r\n                const vnode = createVNode(rootComponent)\r\n                console.log(\"调用render,基于vnode开箱\")\r\n                render(vnode,rootContainer)\r\n            }\r\n        }\r\n        return app\r\n    }\r\n}","import { camelize, hyphenate, toHandlerKey } from \"@mini-vue3/shared\";\r\nexport function emit(instance,event: string, ...rawArgs) {\r\n    //emit是基于props里面的onXXX的函数进行匹配\r\n    //先从props中看看是否有对应的event handler\r\n    const props = instance.props;\r\n    //烤肉串名需要转换为驼峰名\r\n    let handler = props[toHandlerKey(camelize(event))]\r\n    //如果上面没有匹配，那么检测一下event是否是kebab-case类型\r\n    if(!handler) {\r\n        handler = props[(toHandlerKey(hyphenate(event)))]\r\n    }\r\n    if(handler) {\r\n        handler(...rawArgs)\r\n    }\r\n}","export function initProps(instance,rawProps) {\r\n    console.log(\"initProps\")\r\n    //如果组件声明了props,才进入props属性内，否则存储在attrs内\r\n    instance.props = rawProps\r\n}","import { ShapeFlags } from \"@mini-vue3/shared\";\r\nexport function initSlots(instance,children) {\r\n    const {vnode} = instance\r\n    console.log(\"初始化slots\")\r\n    if(vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n        normalizeObjectSlots(children,(instance.slots = {}))\r\n    }\r\n}\r\nconst normalizeSlotValue = (value) => {\r\n    //把function返回的值转换为array,这样slot可以支持多个元素\r\n    return Array.isArray(value) ? value : [value]\r\n}\r\nconst normalizeObjectSlots = (rawSlots,slots) => {\r\n    for(const key in rawSlots) {\r\n        const value = rawSlots[key]\r\n        if(typeof value === 'function') {\r\n            //把函数给到slots对象存起来，后续在renderSlots中调用\r\n            //这里默认slots返回的就是一个vnode对象\r\n            slots[key]= (props)=> normalizeSlotValue(value(props))\r\n        }\r\n    }\r\n}","import { ReactiveEffect } from \"./effect\"\r\nexport type Dep = Set<ReactiveEffect>\r\n//用于存储所有的effect对象\r\nexport function createDep(effects?: ReactiveEffect[]): Dep {\r\n    const dep=new Set<ReactiveEffect>(effects) as Dep\r\n    return dep\r\n}","import { createDep, Dep } from \"./dep\";\r\nimport {extend, isArray} from \"@mini-vue3/shared\"\r\nimport { ComputedRefImpl } from \"./computed\"\r\nlet activeEffect :ReactiveEffect | undefined\r\ntype KeyToDepMap = Map<any, Dep>\r\nconst targetMap = new WeakMap<any, KeyToDepMap>()\r\nexport type EffectScheduler = (...args: any[]) => any\r\nexport interface ReactiveEffectOptions {\r\n    lazy?: boolean,\r\n    scheduler?: EffectScheduler,\r\n    onStop?: () => void\r\n}\r\nexport interface ReactiveEffectRunner<T = any> {\r\n    (): T,\r\n    effect: ReactiveEffect\r\n}\r\n//用于依赖收集\r\nexport class ReactiveEffect <T = any>{\r\n    active = true\r\n    deps: Dep[] = []\r\n    public onStop?: () => void\r\n    computed?: ComputedRefImpl<T>\r\n    constructor(public fn,public scheduler?) {\r\n        console.log(\"创建ReactiveEffect对象\")\r\n    }\r\n    run(){\r\n        console.log(\"run\")\r\n        if(!this.active){\r\n            return this.fn()\r\n        }\r\n        let lastShouldTrack = shouldTrack\r\n        //执行fn,收集依赖\r\n        shouldTrack = true\r\n        //执行run，给全局activeEffect赋值\r\n        //利用全局属性获取当前effect\r\n        activeEffect = this as ReactiveEffect | undefined\r\n        //执行用户传入的fn\r\n        console.log(\"执行用户传入的fn\")\r\n        const result = this.fn()\r\n        //重置\r\n        shouldTrack = lastShouldTrack\r\n        activeEffect = undefined\r\n        return result\r\n    }\r\n    stop() {\r\n        if(this.active){\r\n            //如果是第一次执行stop,进入 并且active重置为false,防止重复调用\r\n            cleanupEffect(this)\r\n            if(this.onStop){\r\n                this.onStop()\r\n            }\r\n            this.active=false\r\n        }\r\n    }\r\n}\r\n//避免副作用函数产生遗留\r\n//遍历副作用函数的依赖集合数组\r\nfunction cleanupEffect(effect: ReactiveEffect) {\r\n    const { deps } = effect\r\n    //将该副作用函数从相关的依赖集合中移除\r\n    if(deps.length) {\r\n        for( let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect)\r\n        }\r\n    }\r\n    deps.length=0\r\n}\r\nexport function effect<T = any>(\r\n    fn: () => T,\r\n    options?: ReactiveEffectOptions): ReactiveEffectRunner {\r\n    if((fn as ReactiveEffectRunner).effect) {\r\n        fn = (fn as ReactiveEffectRunner).effect.fn\r\n    }\r\n    const _effect = new ReactiveEffect(fn)\r\n    //extend就是object.assign,把用户传过来的值合并到_effect对象\r\n    extend(_effect,options)\r\n    if(!options || !options.lazy){\r\n        _effect.run()\r\n    }\r\n    //把_effect.run方法返回 用户可以自行选择调用的时机\r\n    const runner: any = _effect.run.bind(_effect) as ReactiveEffectRunner;\r\n    runner.effect =_effect\r\n    return runner\r\n}\r\nexport function stop(runner: ReactiveEffectRunner) {\r\n    runner.effect.stop()\r\n}\r\nexport let shouldTrack = true\r\nconst trackStack: boolean[] = []\r\nexport function pauseTracking() {\r\n    trackStack.push(shouldTrack)\r\n    shouldTrack = false\r\n}\r\nexport function enblaTracking() {\r\n    trackStack.push(shouldTrack)\r\n    shouldTrack = true\r\n}\r\nexport function resetTracking() {\r\n    const last = trackStack.pop()\r\n    shouldTrack = true\r\n}\r\nexport function track(target: object,type,key) {\r\n    if(!isTracking()){\r\n        return\r\n    }\r\n    console.log(`触发track -> target: ${target} type: ${type} key:${key}`)\r\n    let depsMap = targetMap.get(target)\r\n    if(!depsMap) {\r\n        //初始化depsMap的\r\n        targetMap.set(target,(depsMap = new Map()))\r\n    }\r\n    let dep = depsMap.get(key)\r\n    if(!dep){\r\n        depsMap.set(key,( dep = createDep()))\r\n    }\r\n    trackEffects(dep)\r\n}\r\nexport function trackEffects(dep: Dep){\r\n    let shouldTrack = false\r\n    shouldTrack = !dep.has(activeEffect!)\r\n    //如果依赖已经收集就不需要再收集一次，否则每次都需要cleanupEffect\r\n    //将依赖收集到deps数组，方便在cleanupEffect里面清除\r\n    if(shouldTrack){\r\n        dep.add(activeEffect!)\r\n        activeEffect!.deps.push(dep)\r\n    }\r\n}\r\nexport function trigger(target: object, type, key?: unknown) {\r\n    //先收集所有dep放到deps里面,避免无限循环\r\n    //在trigger内部遍历dep集合执行，会调用cleanupEffect进行清除一边清除一边执行会导致无限循环\r\n    //拷贝副作用到一个新的集合，执行拷贝后的依赖\r\n    let deps: (Dep | undefined)[] = []\r\n    const depsMap = targetMap.get(target)\r\n    if(!depsMap) {\r\n        return\r\n    }\r\n    let dep = depsMap.get(key)\r\n\r\n    deps.push(dep)\r\n    const effects: ReactiveEffect[] = []\r\n    deps.forEach((dep)=>{\r\n        //解构dep得到dep内部存储的effect\r\n        if(dep) {\r\n            effects.push(...dep)\r\n        }\r\n    })\r\n    //将effects放到set进行去重\r\n    triggerEffects(createDep(effects))\r\n\r\n}\r\nexport function isTracking(){\r\n    return shouldTrack && activeEffect !== undefined\r\n}\r\nexport function triggerEffects(dep: Dep | ReactiveEffect[]) {\r\n    const effects = isArray(dep) ? dep : [...dep]\r\n    //执行收集到的所有effect的run方法\r\n    for(const effect of effects) {\r\n        if(effect.computed) {\r\n            triggerEffect(effect)\r\n        }\r\n    }\r\n    for(const effect of effects) {\r\n        if(!effect.computed) {\r\n            triggerEffect(effect)\r\n        }\r\n    }\r\n\r\n}\r\nfunction triggerEffect(\r\n    effect: ReactiveEffect\r\n) {\r\n    if(effect !==  activeEffect) {\r\n        if(effect?.scheduler){\r\n            //scheduler可以让用户自己选择调用的时机\r\n            effect.scheduler()\r\n        }else{\r\n            effect?.run()\r\n        }\r\n    }\r\n}\r\n","import { isObject } from \"@mini-vue3/shared\"\r\nimport { track, trigger } from \"./effect\"\r\nimport { reactive, readonly, ReactiveFlags, reactiveMap, readonlyMap, shallowReadonlyMap } from \"./reactive\"\r\n\r\nconst get = createGetter()\r\nconst set = createSetter()\r\nconst readonlyGet = createGetter(true)\r\nconst shallowReadonlyGet = createGetter(true,true)\r\nfunction createGetter(isReadonly = false,shallow=false) {\r\n    return function get(target,key,receiver) {\r\n        const isExistInReactiveMap = () => \r\n            key === ReactiveFlags.RAW && receiver ===reactiveMap.get(target)       \r\n        const isExistInReadonlyMap = () => \r\n            key === ReactiveFlags.RAW && receiver === readonlyMap.get(target)\r\n        const isExistInShallowReadonlyMap = () =>\r\n            key === ReactiveFlags.RAW && receiver === shallowReadonlyMap.get(target)\r\n        if(key === ReactiveFlags.IS_REACTIVE){\r\n            return !isReadonly\r\n        }else if(key === ReactiveFlags.IS_READONLY){\r\n            return isReadonly\r\n        }else if(\r\n            isExistInReactiveMap() ||\r\n            isExistInReadonlyMap() ||\r\n            isExistInShallowReadonlyMap()\r\n        ){\r\n            return target\r\n        }\r\n        const res=Reflect.get(target,key,receiver)\r\n        if(!isReadonly) {\r\n            //不是readonly需要在触发get的时候依赖收集\r\n            track(target,\"get\",key)\r\n        }\r\n        if(shallow){\r\n            return res\r\n        }\r\n        // Convert returned value into a proxy as well. we do the isObject check\r\n      // here to avoid invalid value warning. Also need to lazy access readonly\r\n      // and reactive here to avoid circular dependency.\r\n        if(isObject(res)){\r\n            return isReadonly ? readonly(res) : reactive(res)\r\n        }\r\n        return res\r\n    }\r\n}\r\nfunction createSetter() {\r\n    return function set(target,key,value,receiver) {\r\n        const result = Reflect.set(target,key,value,receiver)\r\n        //触发set的时候进行触发依赖\r\n        trigger(target,'set',key)\r\n        return result\r\n    }\r\n}\r\nexport const readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target,key) {\r\n        console.warn(\r\n            `Set operation on key \"${String(key)}\" failed: target is readonly.`,\r\n            target\r\n        );\r\n        return true\r\n    }\r\n}\r\nexport const mutableHandlers = {\r\n    get,\r\n    set,\r\n}\r\nexport const shallowReadonlyHanlders = {\r\n    get: shallowReadonlyGet,\r\n    set(target,key) {\r\n        //readonly 的响应式对象不可以修改值\r\n        console.warn(\r\n               `Set operation on key \"${String(key)}\" failed: target is readonly`,\r\n               target\r\n        )\r\n        return true\r\n    }\r\n}\r\n\r\n","import { isObject } from \"@mini-vue3/shared\"\r\nimport { readonlyHandlers, shallowReadonlyHanlders } from \"./baseHandlers\"\r\nimport { mutableHandlers } from \"./baseHandlers\"\r\nexport const reactiveMap = new WeakMap()\r\nexport const readonlyMap = new WeakMap()\r\nexport const shallowReadonlyMap = new WeakMap()\r\nimport { ComputedRefImpl } from \"./computed\"\r\nexport const enum ReactiveFlags {\r\n    IS_REACTIVE = '__v_isReactive',\r\n    IS_READONLY = '__v_isReadonly',\r\n    RAW = '__v_raw'\r\n}\r\nexport function reactive(target) {\r\n    return createReactiveObject(target,reactiveMap,mutableHandlers)\r\n}\r\nexport function readonly(target) {\r\n    return createReactiveObject(target, readonlyMap,readonlyHandlers)\r\n}\r\nexport function isReactive(value: unknown):boolean {\r\n    //如果value是proxy,会触发get操作，而在createGetter里面会判断\r\n    //如果value是普通对象，会返回undefined,需要转换为布尔值\r\n    return !!(value&&value[ReactiveFlags.IS_REACTIVE])\r\n}\r\nexport function shallowReadonly(target) {\r\n    return createReactiveObject(\r\n        target,\r\n        shallowReadonlyMap,\r\n        shallowReadonlyHanlders\r\n    );\r\n}\r\nexport function isReadonly(value: unknown):boolean {\r\n    return !!(value && value[ReactiveFlags.IS_READONLY])\r\n}\r\nexport function isProxy(value:unknown):boolean {\r\n    return isReactive(value) || isReadonly(value)\r\n}\r\nexport function toRaw(observed): boolean {\r\n    const raw = observed && observed[ReactiveFlags.RAW]\r\n    //递归\r\n    return raw ? toRaw(raw) : observed\r\n}\r\nexport const toReactive = <T extends unknown>(value: T):T =>\r\n    isObject(value) ? reactive(value) :value\r\nexport const toReadonly = <T extends unknown>(value: T): T =>\r\n    isObject(value) ? readonly(value as Record<any,any>) : value\r\n\r\nfunction createReactiveObject(target,proxyMap,baseHandlers) {\r\n    //proxy可以监听到用户get或者set动作\r\n    //命中缓存则直接返回\r\n    const existingProxy = proxyMap.get(target)\r\n    if(existingProxy) {\r\n        return existingProxy\r\n    }\r\n    const proxy = new Proxy(target,baseHandlers)\r\n    proxyMap.set(target,proxy)\r\n    return proxy\r\n}","import { hasChanged, isObject } from \"@mini-vue3/shared\";\r\nimport { isTracking, trackEffects, triggerEffects } from \"./effect\";\r\nimport { reactive } from \"./reactive\";\r\nimport { createDep } from \"./dep\";\r\nexport class RefImpl {\r\n    private _rawValue: any;\r\n    private _value: any;\r\n    public dep;\r\n    public __v_isRef = true;\r\n    constructor(value) {\r\n        this._rawValue = value\r\n        //value是一个对象的话用reactive包裹\r\n        this._value = convert(value)\r\n        this.dep = createDep()\r\n    }\r\n    get value(){\r\n        //收集依赖\r\n        trackRefValue(this)\r\n        return this._value\r\n    }\r\n    set value(newValue) {\r\n        //当新值不等于老值才需要触发依赖\r\n        if(hasChanged(newValue,this._rawValue)){\r\n            this._value = newValue\r\n            this._rawValue = newValue\r\n            //触发依赖\r\n            triggerRefValue(this)\r\n        }\r\n    }\r\n}\r\nfunction convert(value) {\r\n    return isObject(value) ? reactive(value) : value\r\n}\r\nexport function ref(value) {\r\n    return createRef(value)\r\n}\r\nfunction createRef(value) {\r\n    const refImpl = new RefImpl(value)\r\n    return refImpl\r\n}\r\nexport function triggerRefValue(ref) {\r\n    triggerEffects(ref.dep)\r\n}\r\nexport function trackRefValue(ref) {\r\n    if(isTracking()) {\r\n        trackEffects(ref.dep)\r\n    }\r\n}\r\n//解构ref,在template中使用ref,可以直接使用，不用.value\r\nconst shallowUnwrapHandlers = {\r\n    get(target,key,receiver) {\r\n        return unRef(Reflect.get(target,key,receiver))\r\n    },\r\n    set(target,key,value,receiver) {\r\n        const oldValue = target[key]\r\n        if(isRef(oldValue) && !isRef(value)){\r\n            return (target[key].value=value)\r\n        }else{\r\n            return Reflect.set(target,key,receiver)\r\n        }\r\n    }\r\n}\r\nexport function proxyRefs(objectWithRefs) {\r\n    return new Proxy(objectWithRefs,shallowUnwrapHandlers)\r\n}\r\n//拿到ref里面的值\r\nexport function unRef(ref) {\r\n    return isRef(ref) ? ref.value : ref\r\n}\r\nexport function isRef(value) {\r\n    return !!value.__v_isRef;\r\n}","import { createDep,Dep } from \"./dep\";\r\nimport { ReactiveEffect } from \"./effect\";\r\nimport { trackRefValue, triggerRefValue } from \"./ref\";\r\n\r\nexport class ComputedRefImpl<T> {\r\n    public dep: Dep;\r\n    public effect: ReactiveEffect;\r\n    private _dirty: boolean;\r\n    private _value!: T;\r\n    constructor(getter) {\r\n        this._dirty=true\r\n        this.dep = createDep()\r\n        this.effect = new ReactiveEffect(getter,() => {\r\n            //当计算属性依赖的响应式数据发生变化 手动调用trigger触发响应\r\n            if(!this._dirty){\r\n                this._dirty=true\r\n                triggerRefValue(this)\r\n            }\r\n        })\r\n        this.effect.computed = this\r\n    }\r\n    get value() {\r\n        //收集依赖\r\n        trackRefValue(this)\r\n        if(this._dirty) {\r\n            this._dirty = false\r\n            this._value = this.effect.run()!\r\n        }\r\n        return this._value\r\n    }\r\n}\r\nexport function computed(getter) {\r\n    return new ComputedRefImpl(getter)\r\n}","import {hasOwn} from \"@mini-vue3/shared\"\r\n//instance的代理对象，渲染上下文对象用在拦截数据状态的读取和设置操作，\r\n//每当在渲染函数或者生命周期钩子中通过this读取数据时，都会优先从组件的\r\n//的自身状态中读取，如果，组件自身没有对应的值，则从props中读取，最后\r\n//我们将渲染上下文作为渲染函数以及生命周期钩子的this值即可\r\nconst publicPropertiesMap = {\r\n    //当用户调用instance.proxy.$emit会触发这个函数\r\n    //i就是instance缩写，也就是组件实例对象\r\n    $el: (i) => i.vnode.el,\r\n    $emit: (i) => i.emit,\r\n    $slots: (i) => i.slots,\r\n    $props: (i) => i.props\r\n}\r\nexport const PublicInstanceProxyHandlers = {\r\n    get({_:instance},key) {\r\n        const {setupState,props} = instance\r\n        console.log(`触发proxy hook,key -> :${key}`)\r\n        if(key[0] !== '$') {\r\n            //说明不是访问public api\r\n            //先检测访问的key是否存在于setupState中，是就直接返回\r\n            if(hasOwn(setupState,key)){\r\n                return setupState[key]\r\n            }else if(hasOwn(props,key)){\r\n                return props[key]\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key]\r\n        if(publicGetter){\r\n            return publicGetter(instance)\r\n        }\r\n    },\r\n    set({_:instance},key,value) {\r\n        const {setupState} = instance\r\n        if(hasOwn(setupState,key)){\r\n            //有的话就是直接赋值\r\n            setupState[key] = value\r\n        } else {\r\n            console.error(\"不存在\")\r\n        }\r\n        return true\r\n    }\r\n}","import {emit} from \"./componentEmits\"\r\nimport { initProps } from \"./componentProps\"\r\nimport { initSlots } from \"./componentSlots\"\r\nimport { proxyRefs, shallowReadonly } from \"@mini-vue3/reactivity\"\r\nimport { PublicInstanceProxyHandlers } from \"./componentPublicInstance\"\r\nexport function createComponentInstance(vnode,parent) {\r\n    const instance = {\r\n        type: vnode.type,\r\n        vnode,\r\n        next: null,//需要更新的vnode,用于更新component类型的组件\r\n        props: {},\r\n        parent,\r\n        provides: parent ? parent.provides : {},//获取parent的provides作为当前组件初始化值，这样就可以继承parent.provides的属性\r\n        proxy: null,\r\n        isMounted: false,\r\n        attrs: {},//存放attrs的数据\r\n        ctx: {},\r\n        setupState:{},//存储setup的返回值\r\n        emit: () => {}\r\n    }\r\n    //prod环境下的ctx是下面简单的结构\r\n    instance.ctx = {\r\n        _: instance\r\n    }\r\n    //这里先用bind把instance进行绑定\r\n    //后面用户使用的时候只需要给event和参数即可\r\n    instance.emit = emit.bind(null,instance) as any\r\n    return instance\r\n}\r\nexport function setupComponent(instance) {\r\n    //处理props,取出vnode里的props\r\n    const {props,children} = instance.vnode\r\n    initProps(instance,props)\r\n    //处理slots\r\n    initSlots(instance,children)\r\n    /*源码里有两种类型的component,一种基于options创建，一种基于function创建，叫做stateful*/\r\n    setupStatefulComponent(instance)\r\n}\r\nfunction setupStatefulComponent(instance) {\r\n    //创建代理，proxy对象代理instance.ctx对象\r\n    instance.proxy = new Proxy(instance.ctx,PublicInstanceProxyHandlers)\r\n    //用户声明的对象就是instance.type\r\n    //const Component = {setup(),render()...}\r\n    const Component = instance.type\r\n    //调用setup\r\n    const {setup} = Component\r\n    if(setup){\r\n        //在调用setup之前设置当前currentInstance\r\n        setCurrentInstance(instance)\r\n        const setupContext=createSetupContext(instance)\r\n        //只有在dev环境下才把props设置为只读\r\n        const setupResult = \r\n        setup && setup(shallowReadonly(instance.props),setupContext)\r\n        setCurrentInstance(null)\r\n        //处理setupResult\r\n        handleSetupResult(instance,setupResult)\r\n    }else{\r\n        finishComponentSetup(instance)\r\n    }\r\n} \r\nfunction handleSetupResult(instance,setupResult) {\r\n    if(typeof setupResult === 'function') {\r\n        //如果返回function,绑定到render上，认为是render逻辑\r\n        //setup(){return ()=>h('div')}\r\n        instance.render=setupResult\r\n    }else if(typeof setupResult === \"object\"){\r\n        //为了方便用户直接访问ref类型的值，需要proxyRefs把setupResult对象作一层代理\r\n        //直接使用值而不用.value\r\n        instance.setupState = proxyRefs(setupResult)\r\n    }\r\n    finishComponentSetup(instance)\r\n}\r\nfunction finishComponentSetup(instance) {\r\n    //给instance设置render\r\n    //先取到用户设置的component options\r\n    const Component = instance.type\r\n    if(!instance.render){\r\n        //如果compile有值，并且组件没有render函数，就需要把template编译成render\r\n        if(compile && !Component.render) {\r\n            if(Component.template) {\r\n                //这里就是runtime模块和compile模块结合点\r\n                const template = Component.template\r\n                Component.render=compile(template)\r\n            }\r\n        }\r\n        instance.render = Component.render\r\n    }\r\n}\r\nfunction createSetupContext(instance) {\r\n    console.log(\"初始化setup context\")\r\n    return {\r\n        attrs: instance.attrs,\r\n        slots:instance.slots,\r\n        emit: instance.emit,\r\n        expose: () => {}\r\n    }\r\n}\r\nexport type Data = Record<string,unknown>\r\nexport interface CurrentInstanceInterface {\r\n    provides: Data,\r\n    parent: any\r\n}\r\nlet currentInstance = {}\r\nexport function getCurrentInstance(): any {\r\n    return currentInstance\r\n}\r\nexport function setCurrentInstance(instance) {\r\n    currentInstance = instance\r\n}\r\nlet compile \r\nexport function registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}","import { getCurrentInstance } from \"./component\";\r\n\r\nexport function provide(key, value) {\r\n    const currentInstance = getCurrentInstance()\r\n    if(currentInstance) {\r\n        let { provides } = currentInstance\r\n        const parentProvides = currentInstance.parent?.provides\r\n        //当父级 key 和 爷爷级别的 key 重复的时候，对于子组件来讲，需要取最近的父级别组件的值\r\n        // 那这里的解决方案就是利用原型链来解决\r\n        // provides 初始化的时候是在 createComponent 时处理的，当时是直接把 parent.provides 赋值给组件的 provides 的\r\n        //如果provides和parentProvides相等 说明是第一次做provide\r\n        //我们就可以把 parent.provides 作为 currentInstance.provides 的原型重新赋值\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides)\r\n        }\r\n        provides[key] = value\r\n    }\r\n}\r\n\r\nexport function inject(key, defaultValue) {\r\n    const currentInstance = getCurrentInstance()\r\n    if(currentInstance) {\r\n        const provides = currentInstance.parent?.provides\r\n        if(key in provides) {\r\n            return provides[key]\r\n        }else if(defaultValue) {\r\n            if(typeof defaultValue === 'function') {\r\n                return defaultValue()\r\n            }\r\n            return defaultValue\r\n        }\r\n    }\r\n}","import { createVNode, Fragment } from \"../vnode\"\r\n\r\n/*Compiler runtime helper for rendering '<slot/>'\r\n用来render slot ,这里是取数据然后渲染出来，这里的目的是\r\nrender函数中调用renderSlot去instance.slots内的数据\r\n*/\r\nexport function renderSlot(slots, name: string, props = {}) {\r\n    const slot = slots[name]\r\n    console.log(`渲染插槽 -> ${name}`)\r\n    if(slot) {\r\n        const slotContent = slot(props)\r\n        return createVNode(Fragment, {}, slotContent)\r\n    }\r\n}","const queue: any[] = []\r\nconst activePreFlushCbs: any = []\r\nconst p = Promise.resolve()\r\nlet isFlushPending  = false \r\nexport function nextTick(fn?) {\r\n    return fn ? p.then(fn) : p\r\n}\r\nexport function queueJob(job) {\r\n    if(!queue.includes(job)){\r\n        queue.push(job)\r\n        //执行所有job\r\n        queueFlush()\r\n    }\r\n}\r\nfunction queueFlush(){\r\n    //多个组件更新，触发一次then即可\r\n    //触发过一次nextTick 后面不需要再触发一次\r\n    if(isFlushPending)return \r\n    isFlushPending = true\r\n    nextTick(flushJobs)\r\n}\r\nexport function queuePreFlushCb(cb) {\r\n    queueCb(cb,activePreFlushCbs)\r\n}\r\nfunction queueCb(cb,activeQueue){\r\n    activeQueue.push(cb)\r\n    //执行队列里所有job\r\n    queueFlush()\r\n}\r\nfunction flushJobs() {\r\n    isFlushPending=false\r\n    //先执行pre类型的job\r\n    //执行这里的job时 页面还没渲染\r\n    flushPreFlushCbs()\r\n    let job\r\n    while((job = queue.shift())){\r\n        if(job){\r\n            job()\r\n        }\r\n    }\r\n}\r\nfunction flushPreFlushCbs() {\r\n    //执行所有pre类型的job\r\n    for(let i=0;i<activePreFlushCbs.length;i++){\r\n        activePreFlushCbs[i]()\r\n    }\r\n}","export function shouldUpdateComponent(preVNode,nextVNode) {\r\n    const {props: prevProps} = preVNode\r\n    const {props: nextProps} = nextVNode\r\n    //props没有变化，就不需要更新\r\n    if(prevProps === nextProps)return false\r\n    //如果之前没有props,那么看看现在有没有props\r\n    if(!prevProps)return !!nextProps\r\n    //之前有值，现在没值，那么需要更新\r\n    if(!nextProps)return true\r\n    return hasPropsChanged(prevProps,nextProps)\r\n}\r\nfunction hasPropsChanged(prevProps,nextProps): boolean {\r\n    //对比每一个props.key\r\n    //如果length不一致需要更新\r\n    const nextKeys = Object.keys(nextProps)\r\n    if(nextKeys.length !== Object.keys(prevProps).length){\r\n        return true\r\n    }\r\n    //只要现在的prop和之前的props有一个不一样就需要更新\r\n    for(let i=0;i<nextKeys.length;i++){\r\n        const key = nextKeys[i]\r\n        if(nextProps[key] !== prevProps[key]){\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}","import { ShapeFlags } from \"@mini-vue3/shared\"\r\nimport { effect } from \"@mini-vue3/reactivity\"\r\nimport { setupComponent } from \"./component\"\r\nimport { createComponentInstance } from \"./component\"\r\nimport { queueJob } from \"./scheduler\"\r\nimport { shouldUpdateComponent } from \"./componentRenderUtils\"\r\nimport { createAppAPI } from \"./createApp\"\r\nimport { normalizeChildren, normalizeVNode, Fragment, Text } from \"./vnode\"\r\nexport function createRenderer(options): any {\r\n    const {\r\n        createElement: hostCreateElemet,\r\n        setElementText: hostSetElementText,\r\n        patchProp: hostPatchProp,\r\n        insert: hostInsert,\r\n        remove: hostRemove,\r\n        setText: hostSetText,\r\n        createText: hostCreateText\r\n    } = options\r\n    const render = (vnode,container) => {\r\n        console.log(\"调用patch\")\r\n        patch(null,vnode,container)\r\n    }\r\n    function patch(\r\n        n1,\r\n        n2,\r\n        container = null,\r\n        anchor = null,\r\n        parentComponent = null\r\n    ) {\r\n        //n2为新的vnode,基于n2的类型判断\r\n        const {type,shapeFlag} = n2\r\n        switch(type) {\r\n            case Text: \r\n                processText(n1,n2,container);\r\n                break;\r\n            case Fragment:\r\n                processFragement(n1,n2,container)\r\n                break\r\n            default:\r\n                //基于shapeFlag处理\r\n                if(shapeFlag & ShapeFlags.ELEMENT) {\r\n                    console.log(\"处理element\")\r\n                    processElement(n1,n2,container,anchor,parentComponent)\r\n                }else if(shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n                    console.log(\"处理component\")\r\n                    processComponent(n1,n2,container,parentComponent)\r\n                }\r\n        }\r\n\r\n    }\r\n    function processFragement(n1: any,n2: any,container: any) {\r\n        //只需要渲染children,然后添加到container内\r\n        if(!n1){\r\n            //初始化children,然后添加到container内\r\n            mountChildren(n2.children,container)\r\n        }\r\n    }\r\n    function processText(n1: any,n2: any,container: any) {\r\n        //处理Text结点\r\n        if(n1 === null) {\r\n            //n1是null，说明是init阶段\r\n            //基于createText创建出text结点，使用insert添加到el内\r\n            console.log(\"初始化Text类型的结点\")\r\n            hostInsert((n2.el = hostCreateText(n2.children as string)),container)\r\n        }else{\r\n            //update\r\n            //先对比下 updated之后的内容和之前的是否一样\r\n            //不一样需要update text\r\n            //n1赋值给n2?\r\n            const el =(n2.el =n1.el!)\r\n            if(n2.children !== n1.children) {\r\n                console.log('更新Text类型结点')\r\n                hostSetText(el,n2.children as string)\r\n            }\r\n        }\r\n    }\r\n    function processElement(n1,n2,container,anchor,parentComponent) {\r\n        if(!n1){\r\n            mountElement(n2,container,anchor)\r\n        }else{\r\n            updateElement(n1,n2,container,anchor,parentComponent)\r\n        }\r\n    }\r\n    \r\n    function updateElement(n1,n2,container,anchor,parentComponent) {\r\n        const oldProps = (n1 && n1.props) || {}\r\n        const newProps = n2.props || {}\r\n        //把el挂载到新的vnode\r\n        const el = (n2.el=n1.el)\r\n        //对比props\r\n        patchProps(el,oldProps,newProps)\r\n        //对比children\r\n        patchChildren(n1,n2,el,anchor,parentComponent)\r\n    }\r\n    \r\n    function patchProps(el,oldProps,newProps) {\r\n        //oldProps里有，newProps也有，但是值变了\r\n        for(const key in newProps) {\r\n            const prevProp = oldProps[key]\r\n            const nextProp = newProps[key]\r\n            if(prevProp !== nextProp) {\r\n                //对比属性\r\n                hostPatchProp(el,key,prevProp,nextProp)\r\n            }\r\n        }\r\n        //oldProps里有但是newProps里面没有的要删除\r\n        for(const key in oldProps){\r\n            const prevProp = oldProps[key]\r\n            if(!(key in newProps)){\r\n                //以oldProps为基准遍历\r\n                //而且得到的值是newProps内没有的\r\n                //所以交给host更新时，把新的值设置为null\r\n                hostPatchProp(el,key,prevProp,null)\r\n            }\r\n        }\r\n    }\r\n    function patchChildren(n1,n2,container,anchor,parentComponent) {\r\n        const {shapeFlag:prevShapeFlag,children: c1} =n1\r\n        const {shapeFlag,children:c2} = n2\r\n        /*如果n2的children是text类型，看看和之前的n1的children是否一样\r\n        不一样就重新设置一下text */\r\n        if(shapeFlag & ShapeFlags.TEXT_CHILDREN){\r\n            if(c1 !== c2) {\r\n                console.log(\"类型为text_childrn，当前需要更新\")\r\n                hostSetElementText(container,c2 as string)\r\n            }\r\n        }else {\r\n            //如果之前是array_children,现在也是array_children,就需要对比\r\n            if(prevShapeFlag & ShapeFlags.ARRAY_CHILDREN){\r\n                if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent);\r\n                  }\r\n            }\r\n        }\r\n    }\r\n    function patchKeyedChildren(\r\n        c1: any[],\r\n        c2: any[],\r\n        container,\r\n        parentAnchor,\r\n        parentComponent\r\n    ){\r\n        let i=0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length-1;\r\n        let e2 = l2-1;\r\n        const isSameVNodeType = (n1,n2) => {\r\n            return n1.type === n2.type && n1.key === n2.key\r\n        }\r\n        //从左往右比对子节点\r\n        while(i<=e1 && i<=e2) {\r\n            const prevChild = c1[i]\r\n            const nextChild = c2[i]\r\n            if(!isSameVNodeType(prevChild,nextChild)) {\r\n                console.log(\"两个child不相等(从左往右比对\")\r\n                console.log(`prevChild:${prevChild}`)\r\n                console.log(`nextChild: ${nextChild}`)\r\n                break;\r\n            }\r\n            console.log(\"两个child相等，接下来对比这两个child节点从左往右比对\")\r\n            patch(prevChild,nextChild,container,parentAnchor,parentComponent)\r\n            i++;\r\n        }\r\n        while(i<e1 && i<e2) {\r\n            //从右向左取值\r\n            const prevChild = c1[e1]\r\n            const nextChild = c2[e2]\r\n            if(!isSameVNodeType(prevChild,nextChild)){\r\n                console.log(\"两个child不相等（从右往左比对\")\r\n                console.log(`prevChild:${prevChild}`)\r\n                console.log(`nextChild:${nextChild}`)\r\n                break;\r\n            }\r\n            console.log(\"两个child相等，接下来对比这两个child节点（从右往左比对)\")\r\n            patch(prevChild,nextChild,container,parentAnchor,parentComponent)\r\n            e1--;\r\n            e2--;\r\n        } \r\n        //新节点的数量大于旧结点的数量，新增vnode\r\n        //循环c2 新的结点\r\n        if(i>e2 && i<=e2) {\r\n            //从e2+1处取到锚点位置，\r\n            const nextPos = e2+1\r\n            const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor\r\n            while(i<=e2) {\r\n                console.log(`需要新创建一个vnode:${c2[i].key}`)\r\n                patch(null,c2[i],container,anchor,parentComponent)\r\n                i++\r\n            }\r\n        }else if(i>e2&&i<=e1) {\r\n            //旧结点多于新结点，需要卸载结点\r\n            while(i<=e1) {\r\n                console.log(`需要删除当前的vnode:${c1[i].key}`)\r\n                hostRemove(c1[i].el)\r\n                i++\r\n            }\r\n        }else{\r\n            //左右两边对比完就处理中间部位顺序变动的\r\n            let s1 = i\r\n            let s2 = i\r\n            const keyToNewIndexMap = new Map()\r\n            let moved = false\r\n            let maxNewIndexSoFar = 0\r\n            //绑定key和newIndex\r\n            for(let i=s2;i<=e2;i++){\r\n                const nextChild = c2[i]\r\n                keyToNewIndexMap.set(nextChild.key,i)\r\n            }\r\n            //需要处理的新节点的数量\r\n            let toBePatched = e2-s2+1\r\n            let patched = 0\r\n            let newIndexToOldIndexMap = new Array(toBePatched)\r\n            //初始化newIndexToOlsIndexMap为0，后面处理如果发现是0，说明新值在老的里面不存在\r\n            for(let i=0;i<toBePatched;i++)newIndexToOldIndexMap[i]=0\r\n            //遍历老结点，新节点没有的结点删除，新老结点都有的需要patch\r\n            for(i=s1;i<=e1;i++){\r\n                const prevChild = c1[i]\r\n                //如果老的节点大于新节点的数量，处理老节点的时候直接删除即可\r\n                if(patched >= toBePatched) {\r\n                    hostRemove(prevChild.el)\r\n                    continue\r\n                }\r\n                let newIndex;\r\n                if(prevChild.key !== null) {\r\n                    //通过key快速查找，看看新的里面这个节点是否存在\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key)\r\n                }else {\r\n                    //没有key就遍历所有新节点来确定当前结点是否存在\r\n                    for(let j = s2;j<=e2;j++){\r\n                        if(isSameVNodeType(prevChild,c2[j])){\r\n                            newIndex = j;\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                if(newIndex===undefined) {\r\n                    //当前结点不存在于newChildren,把当前结点删除\r\n                    hostRemove(prevChild.el)\r\n                }else{\r\n                    //新老节点都存在\r\n                    console.log(\"新老节点都存在\")\r\n                    //把新节点的索引和老结点的索引建立映射关系\r\n                    //i+1是因为i可能是0,0被认为新节点在老节点中不存在\r\n                    newIndexToOldIndexMap[newIndex-s2] = i+1\r\n                    //确定中间结点是否需要移动\r\n                    //新的newIndex如果一直升序，说明没有移动\r\n                    //记录最后一个结点在新的里面的索引，看看是否升序\r\n                    //不是升序，确定结点移动过\r\n                    if(newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex\r\n                    }else{\r\n                        moved = true\r\n                    }\r\n                    patch(prevChild,c2[newIndex],container,null,parentComponent)\r\n                    patched++\r\n                }\r\n            }\r\n            //利用最长递增子序列优化移动逻辑\r\n            //因为元素升序，那么这些元素不需要移动\r\n            //通过最长递增子序列获取到升序的列表\r\n            //在移动的时候去对比列表，如果对比上，说明元素不需要移动\r\n            //通过moved进行优化，如果没有移动过的话，就不需要执行算法\r\n            //getSequence返回的是newIndexToOldIndexMap的索引值\r\n            //所以后面可以直接遍历索引值处理，也就是直接使用toBePatched\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : []\r\n            let j = increasingNewIndexSequence.length - 1\r\n            /*遍历新节点：\r\n            1.找出老节点没有的 而新节点有的 需要把这个节点创建\r\n            2.最后移动一下位置\r\n            倒循环是因为在insert时，需要保证锚点是处理完的结点，也就是已经确定位置了 \r\n            insert逻辑是使用的insertBefore()*/\r\n            for(let i = toBePatched-1;i>=0;i--){\r\n                //确定当前要处理的节点索引\r\n                const nextIndex = s2+i\r\n                const nextChild = c2[nextIndex]\r\n                //锚点等于当前节点索引+1\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex+1].el : parentAnchor\r\n                if(newIndexToOldIndexMap[i]===0) {\r\n                    //说明新节点在老的里面不存在\r\n                    //需要创建\r\n                    patch(null,nextChild,container,anchor,parentComponent)\r\n                }else if(moved) {\r\n                    //需要移动\r\n                    //j已经没有了 说明剩下的都需要移动\r\n                    //最长递增子序列里面的值和当前值不匹配，说当前元素需要移动\r\n                    if(j<0 || increasingNewIndexSequence[j] !== i ){\r\n                        //移动用insert\r\n                        hostInsert(nextChild.el,container,anchor)\r\n                    }else{\r\n                        //命中了index和最长递增子序列的值\r\n                        //移动指针\r\n                        j--\r\n                    }\r\n                }\r\n            }\r\n        }       \r\n    }\r\n    function mountElement(vnode,container,anchor) {\r\n        const {shapeFlag, props} = vnode\r\n        //先创建element\r\n        const el = (vnode.el = hostCreateElemet(vnode.type))\r\n        //支持单子组件和多子组件的创建\r\n        if(shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n            /*一层直接渲染*/\r\n            console.log(`处理文本${vnode.children}`)\r\n            hostSetElementText(el,vnode.children)\r\n        }else if(shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n            /*\r\n            render(){\r\n                return h(\"div\",{},[h(\"p\"),h(Hello)])\r\n            }\r\n            */\r\n           //children是个数组，一次调用patch递归处理\r\n           mountChildren(vnode.children,el)\r\n        }\r\n        //处理props\r\n        if(props) {\r\n            for(const key in props) {\r\n                //过滤vue自身用的key,比如生命周期相关的key:beforeMount,mounted\r\n                const nextVal = props[key]\r\n                hostPatchProp(el,key,null,nextVal)\r\n            }\r\n        }\r\n        //触发beforeMount()钩子\r\n        console.log(\"vnodeHook -> onVnodeBeforeMount\")\r\n        console.log(\"DirectiveHook -> beforeMount\")\r\n        console.log(\"transition -> beforeEnter\")\r\n\r\n        //插入\r\n        hostInsert(el,container,anchor)\r\n        //触发mounted()钩子\r\n        console.log(\"vnodeHook -> onVnodeMounted\")\r\n        console.log(\"DirectiveHook -> mounted\")\r\n        console.log(\"transition -> enter\")\r\n    }\r\n    function mountChildren(children,container){\r\n        children.forEach((VNodeChild) => {\r\n            //处理vnodeChild,可能不是vnode类型\r\n            console.log(\"mountChildren\",VNodeChild)\r\n            patch(null,VNodeChild,container)\r\n        })\r\n    }\r\n    function processComponent(n1,n2,container,parentComponent) {\r\n        //如果n1没有值，那么就是mount\r\n        if(!n1) {\r\n            //初始化component\r\n            mountComponent(n2,container,parentComponent)\r\n        }else{\r\n            updateComponent(n1,n2,container)\r\n        }\r\n    }\r\n\r\n    function updateComponent(n1,n2,container) {\r\n        console.log(\"更新组件\",n1,n2)\r\n        //更新组件实例引用\r\n        const instance = (n2.component = n1.component)\r\n        //先看看这个组件是否应该更新\r\n        if(shouldUpdateComponent(n1,n2)){\r\n            console.log(`组件需要更新：${instance}`)\r\n            //next就是新的vnode\r\n            instance.next=n2\r\n            /*update是在setupRenderEffect 里面初始化的，update函数除了当内部响应式对象\r\n            发生改变的时候会调用，还可以直接主动调用（属于effect的特性），调用update再次调用patch逻辑\r\n            在update中调用的next就变成了了n2*/ \r\n            instance.update()\r\n        }else{\r\n            console.log(`组件不需要更新:${instance}`)\r\n            n2.component=n2.component\r\n            n2.el=n1.el\r\n            instance.vnode=n2\r\n        }\r\n    }\r\n    function mountComponent(initialVNode,container,parentComponent) {\r\n        //先创建一个component instance\r\n        const instance = (initialVNode.component = createComponentInstance(\r\n            initialVNode,\r\n            parentComponent\r\n        ))\r\n        console.log(`创建组件实例：${instance.type.name}`)\r\n        //给Instance加工\r\n        setupComponent(instance)\r\n        setupRenderEffect(instance,initialVNode,container)           \r\n    }\r\n    \r\n    function setupRenderEffect(instance,initialVNode,container) {\r\n        function componentUpdateFn(){\r\n            //组件还没挂载\r\n            if(!instance.isMounted) {\r\n                //组件初始化，要调用render函数，因为在effect内调用render才能好触发依赖收集\r\n                //等到后面响应式的值变更后会再次触发函数\r\n                const proxyToUse = instance.proxy\r\n                //在render函数将this指向proxy\r\n                const subTree = (instance.subTree = normalizeVNode(\r\n                    instance.render.call(proxyToUse,proxyToUse)\r\n                ))\r\n                console.log(\"subTree\",subTree)\r\n                console.log(`${instance.type.name}:触发 beforeMount hook`)\r\n                console.log(`${instance.type.name}:触发 onVnodeBeforeMount hook`)\r\n                //基于subTree再次调用patch\r\n                //基于render返回的vnode,再次进行渲染,递归渲染subTree\r\n                patch(null,subTree,container,null,instance)\r\n                //把root element赋值给组件的vnode.el,为后续调用$el的时候获取值\r\n                initialVNode.el = subTree?.el\r\n                console.log(`${instance.type.name}:触发mounted hook`)\r\n                instance.isMounted=true\r\n            }else{\r\n                //响应式数据变更后拿到新的vnode和之前的vnode进行对比\r\n                console.log(`${instance.type.name}:调用更新逻辑`)\r\n                const { next,vnode} = instance\r\n                //有next 需要更新组件数据\r\n                //先更新组件数据 更新完成后再继续对比当前子元素\r\n                if(next){\r\n                    next.el = vnode.el\r\n                    updateComponentPreRender(instance,next)\r\n                }\r\n                //instance.proxy=>instance.ctx\r\n                const proxyToUse = instance.proxy\r\n                const nextTree = normalizeVNode(\r\n                    instance.render.call(proxyToUse,proxyToUse)\r\n                )\r\n                //替换之前的subTree\r\n                const preTree = instance.subTree\r\n                instance.subTree = nextTree\r\n                //触发beforeUpdated hook\r\n                console.log(`${instance.type.name}:触发beforeUpdated hook`)\r\n                console.log(`${instance.type.name}:触发onVnodeBeforeUpdate hook`)\r\n                //旧的vnode和新的vnode交给patch处理\r\n                patch(preTree,nextTree,preTree.el,null,instance)\r\n                //触发updated hook\r\n                console.log(`${instance.type.name}:触发updated hook`)\r\n                console.log(`${instance.type.name}:复发onVnodeUpdated hook`)\r\n            }\r\n        };\r\n        instance.update = effect(componentUpdateFn,{\r\n            scheduler: () => {\r\n                //把effect推到微任务的时候再执行\r\n                //queueJob(effect)\r\n                queueJob(instance.update)\r\n            }\r\n        })\r\n    }\r\n    function updateComponentPreRender(instance,nextVNode){\r\n        nextVNode.component=instance\r\n        instance.vnode = nextVNode\r\n        instance.next=null\r\n        const {props} = nextVNode\r\n        console.log(\"更新组件的props\",props)\r\n        instance.props = props\r\n        console.log(\"更新组件的slots\")\r\n    }\r\n    return {\r\n        render,\r\n        createApp: createAppAPI(render)\r\n    }  \r\n}\r\n//返回最长递增子序列的索引值\r\nfunction getSequence(arr:number[]):number[] {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n      const arrI = arr[i];\r\n      if (arrI !== 0) {\r\n        j = result[result.length - 1];\r\n        if (arr[j] < arrI) {\r\n          p[i] = j;\r\n          result.push(i);\r\n          continue;\r\n        }\r\n        u = 0;\r\n        v = result.length - 1;\r\n        while (u < v) {\r\n          c = (u + v) >> 1;\r\n          if (arr[result[c]] < arrI) {\r\n            u = c + 1;\r\n          } else {\r\n            v = c;\r\n          }\r\n        }\r\n        if (arrI < arr[result[u]]) {\r\n          if (u > 0) {\r\n            p[i] = result[u - 1];\r\n          }\r\n          result[u] = i;\r\n        }\r\n      }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n      result[u] = v;\r\n      v = p[v];\r\n    }\r\n    return result;\r\n}\r\n","import { effect, ReactiveEffect } from \"@mini-vue3/reactivity\"\r\nimport { queuePreFlushCb } from \"./scheduler\"\r\n\r\n//Simple effect\r\nexport function watchEffect(effect) {\r\n    doWatch(effect)\r\n}\r\nfunction doWatch(source){\r\n    const job = () => {\r\n        effect.run()\r\n    }\r\n    //当触发trigger的时候调用scheduler\r\n    //可以在render前执行回调，回调变成一个异步行为\r\n    const scheduler = () => queuePreFlushCb(job)\r\n    //在执行effct.run时会调用getter\r\n    const getter = () => {\r\n        source()\r\n    }\r\n    const effect = new ReactiveEffect(getter,scheduler)\r\n    //这里执行的是getter\r\n    effect.run()\r\n}","import { isOn } from \"@mini-vue3/shared\";\r\nimport { createRenderer } from \"@mini-vue3/runtime-core\"\r\nfunction createElement(type) {\r\n  console.log(\"CreateElement\", type);\r\n  const element = document.createElement(type);\r\n  return element;\r\n}\r\nfunction createText(text) {\r\n  return document.createTextNode(text);\r\n}\r\nfunction setText(node, text) {\r\n  node.nodeValue = text;\r\n}\r\nfunction setElementText(el, text) {\r\n  console.log(\"SetElementText\",el, text);\r\n  el.textContent = text;\r\n}\r\nfunction patchProp(el, key, preValue, nextValue) {\r\n  //preValue之前的值\r\n  console.log(`PatchProp设置属性：${key},值:${nextValue}`);\r\n  if (isOn(key)) {\r\n    //添加事件处理函数，添加和删除的必须是一个函数，不然删不掉\r\n    //需要把之前的add函数存起来。后面删除的时候需要用到\r\n    //nextValue 当对比发现不一样的时候可通过缓存的机制避免注册多次\r\n    //存储所有事件函数\r\n    const invokers = el._vei || (el.vei = {});\r\n    const existingInvoker = invokers[key];\r\n    if (nextValue && existingInvoker) {\r\n      //直接修改函数的值\r\n      existingInvoker.value = nextValue;\r\n    } else {\r\n      const eventName = key.slice(2).toLowerCase();\r\n      //nextValue有\r\n      if (nextValue) {\r\n        const invoker = (invokers[key] = nextValue);\r\n        el.addEventListener(eventName, invoker);\r\n      } else {\r\n        //没有nextValue\r\n        el.removeEventListener(eventName, existingInvoker);\r\n        invokers[key] = undefined;\r\n      }\r\n    }\r\n  } else {\r\n    //不是事件处理函数,nextValue是null或者空\r\n    if (nextValue === null || nextValue === \"\") {\r\n      el.removeAttribute(key);\r\n    } else {\r\n      el.setAttribute(key, nextValue);\r\n    }\r\n  }\r\n}\r\nfunction insert(child, parent, anchor = null) {\r\n  console.log(\"insert\");\r\n  parent.setAttribute(child, anchor);\r\n}\r\nfunction remove(child) {\r\n  const parent = child.parentNode;\r\n  if (parent) {\r\n    parent.removeChild(child);\r\n  }\r\n}\r\nlet renderer;\r\nfunction ensureRenderer() {\r\n  return (\r\n    renderer ||\r\n    (renderer = createRenderer({\r\n      createElement,\r\n      createText,\r\n      setText,\r\n      setElementText,\r\n      patchProp,\r\n      insert,\r\n      remove,\r\n    }))\r\n  );\r\n}\r\nexport const createApp = (...args) => {\r\n  return ensureRenderer().createApp(...args);\r\n};\r\nexport * from \"@mini-vue3/runtime-core\";\r\n","export const TO_DISPLAY_STRING = Symbol(`toDisplayString`)\r\nexport const CREATE_ELEMENT_VNODE = Symbol(`createElementVNode`)\r\n\r\nexport const helperNameMap = {\r\n    [TO_DISPLAY_STRING]: 'toDisplayString',\r\n    [CREATE_ELEMENT_VNODE]: 'createElementVNode'\r\n}","import { isString } from \"@mini-vue3/shared\"\r\nimport { NodeTypes } from \"./ast\"\r\nimport { CREATE_ELEMENT_VNODE, helperNameMap, TO_DISPLAY_STRING } from \"./runtimeHelpers\"\r\n\r\nexport function generate(ast, options = {}) {\r\n    //生成context\r\n    const context = createCodegenContext(ast, options)\r\n    const { push, mode} = context\r\n    //先生成preambleContext\r\n    if(mode === 'module') {\r\n        genModulePreamble(ast,context)\r\n    }else{\r\n        genFunctionPreamble(ast,context)\r\n    }\r\n    const functionName = \"render\"\r\n    const args = [\"_ctx\"]\r\n    //将args处理成string\r\n    const signature = args.join(\", \")\r\n    push(`function ${functionName}(${signature}){`)\r\n    //生成具体代码内容\r\n    push(\"return \")\r\n    genNode(ast.codegenNode,context)\r\n    push(\"}\")\r\n    return {\r\n        code: context.code\r\n    }\r\n}\r\n\r\nfunction genInterpolation(node: any, context: any){\r\n    const { push, helper } = context\r\n    push(`${helper(TO_DISPLAY_STRING)}(`)\r\n    genNode(node.content,context)\r\n    push(\")\")\r\n}\r\n\r\nfunction genNullableArgs(args){\r\n    //把末尾为null的删除\r\n    let i = args.length\r\n    while(i--) {\r\n        if(args[i] !== null) break;\r\n    }\r\n    //把为falsy的值替换为null,falsy的值有false,0,-0,0n,'',null,undefined,NAN\r\n    return args.slice(0,i+1).map((arg) => arg || 'null')\r\n}\r\n\r\nfunction genNodeList(nodes: any, context: any){\r\n    const { push } = context;\r\n    for(let i=0; i < nodes.length; i++) {\r\n        const node = nodes[i]\r\n        if(isString(node)) {\r\n            push(`${node}`);\r\n        }else {\r\n            genNode(node, context);\r\n        }\r\n        if( i < nodes.length-1) {\r\n            push(\", \");\r\n        }\r\n    }\r\n}\r\n\r\nfunction genElement(node, context) {\r\n    const { push, helper} = context;\r\n    const { tag, props, children} = node;\r\n    push(`${helper(CREATE_ELEMENT_VNODE)}(`);\r\n    genNodeList(genNullableArgs([tag, props, children]), context);\r\n    push(`)`)\r\n}\r\n\r\nfunction genText(node: any, context: any) {\r\n    const { push } = context;\r\n    push(`'${node.content}'`);\r\n}\r\n\r\nfunction genCompoundExpression(node: any, context: any){\r\n    const { push } = context;\r\n    for(let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if(isString(child)) {\r\n            push(child)\r\n        }else {\r\n            genNode(child, context)\r\n        }\r\n    }\r\n}\r\n\r\nfunction genModulePreamble(ast, context){\r\n    const { push,newline,runtimeModuleName} = context\r\n    //比如ast.helpers里面有个[toDisplayString]\r\n    //生成后就是import {toDisplayString as _toDisplayString} from \"vue\"\r\n   if(ast.helpes.length){\r\n    const code =  `import {${ast.helpers\r\n        .map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n        .join(\", \")} } from ${JSON.stringify(runtimeModuleName)}`;\r\n    push(code)   \r\n   }\r\n   newline();\r\n   push(`export `);  \r\n}\r\n\r\nfunction genFunctionPreamble(ast: any, context: any) {\r\n    const { runtimeGlobalName,push,newline} = context\r\n    const VueBinging = runtimeGlobalName\r\n    const aliasHelper = (s) => `${helperNameMap[s]} : _${helperNameMap[s]}`\r\n    //?\r\n    if(ast.helpers.length > 0) {\r\n        push(\r\n            `\r\n                const { ${ast.helpers.map(aliasHelper).join(\", \")}} = ${VueBinging}\r\n            `\r\n        )\r\n    }\r\n    newline()\r\n    push(`return `)\r\n}\r\n\r\nfunction genExpression(node: any, context: any){\r\n    context.push(node.content, node)\r\n}\r\n\r\n//规则：读取node,基于不同node生成对应代码块，将代码拼接到一起\r\nfunction genNode(node: any, context: any) {\r\n    switch(node?.type) {\r\n        case NodeTypes.INTERPOLATION:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case NodeTypes.SIMPLE_EXPRESSION:\r\n            genExpression(node,context);\r\n            break;\r\n        case NodeTypes.ELEMENT:\r\n            genElement(node, context);\r\n            break;\r\n        case NodeTypes.COMPOUND_EXPRESSION:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case NodeTypes.TEXT:\r\n            genText(node, context);\r\n            break;\r\n        default:\r\n            break;\r\n\r\n    }\r\n}\r\n\r\nfunction createCodegenContext(\r\n    ast: any,\r\n    { runtimeModuleName = \"vue\", runtimeGlobalName = \"Vue\",mode = \"function\"}\r\n): any {\r\n    const context = {\r\n        code: '',\r\n        mode,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`\r\n        },\r\n        push(code) {\r\n            context.code += code\r\n        },\r\n        newline() {\r\n            context.code += '\\n'\r\n        }\r\n    }\r\n    return context\r\n}","import { NodeTypes } from \"./ast\"\r\nimport { TO_DISPLAY_STRING } from \"./runtimeHelpers\"\r\n\r\nexport function transform(root, options = {}) {\r\n    //创建context\r\n    const context = createTransformContext(root, options)\r\n    //遍历node\r\n    traverseNode(root, context)\r\n\r\n    createRootCodegen(root, context)\r\n    //用于后续代码拼接\r\n    root.helpers.push(...context.helpers.keys())\r\n}\r\nfunction traverseNode(node: any, context) {\r\n    //拿到需要转换的结点\r\n    const type: NodeTypes = node.type\r\n    //遍历调用所有nodeTransforms\r\n    //把node给到transform\r\n    //用户可以对node做处理\r\n    const nodeTransforms = context.nodeTransforms\r\n    const exitFns: any = []\r\n    for(let i = 0; i < nodeTransforms.length; i++) {\r\n        const transform = nodeTransforms[i]\r\n        const onExit = transform(node, context)\r\n        if(onExit) {\r\n            exitFns.push(onExit)\r\n        }\r\n    }\r\n    switch(type) {\r\n        case NodeTypes.INTERPOLATION: \r\n            //插值的点 在于后续生成 render代码时获取变量的值\r\n            context.helper(TO_DISPLAY_STRING)\r\n            break\r\n        case NodeTypes.ROOT:\r\n        case NodeTypes.ELEMENT:\r\n            //traverseChildren里面继续递归调用traverseNode\r\n            traverseChildren(node, context)\r\n            break\r\n        default: \r\n            break\r\n    }\r\n    let i = exitFns.length\r\n    //当转换函数处于进入阶段时先从父结点进入在都子节点，退出阶段，先退出子节点，在推出父结点\r\n    //反序执行回调函数栈，则能够保证后序注册的函数执行完毕，还能保证该函数的所有子节点已经执行完毕\r\n    while(i--) {\r\n        exitFns[i]()\r\n    }\r\n}\r\nfunction traverseChildren(parent: any, context: any) {\r\n    parent.children?.forEach((node) => {\r\n        traverseNode(node,context)\r\n    })\r\n}\r\nfunction createTransformContext(root, options): any {\r\n    const context = {\r\n        root,\r\n        nodeTransforms: options.nodeTransforms || [],\r\n        helpers: new Map(),\r\n        helper(name) {\r\n            //收集调用的次数\r\n            //收集次数是为了给删除做处理，当只有count为0时才需要删除\r\n            const count = context.helpers.get(name) || 0\r\n            context.helpers.set(name,count + 1)\r\n        }\r\n    }\r\n    return context\r\n}\r\nfunction createRootCodegen(root: any, context: any) {\r\n    const { children} = root\r\n    //只支持一个根结点\r\n    const child = children[0]\r\n\r\n    //element类型的话，就把它的codegenNode赋值给root\r\n    //root是空的 什么数据都没有\r\n    //额外处理codegenNode\r\n    //codegenNode的目的是专门为了codegen准备的 为的就是和ast的node分开\r\n    if(child.type === NodeTypes.ELEMENT && child.codegenNode) {\r\n        const codegenNode = child.codegenNode\r\n        root.codegenNode = codegenNode\r\n    }else {\r\n        root.codegenNode = child\r\n    }\r\n}","import { NodeTypes } from \"../ast\";\r\n\r\nexport function transformExpression(node) {\r\n    return () => {\r\n        if(node.type === NodeTypes.INTERPOLATION) {\r\n            node.content = processExpression(node.content)\r\n        }\r\n    }\r\n}\r\nfunction processExpression(node) {\r\n    node.content = `_ctx.${node.content}`\r\n    return node\r\n}","import { NodeTypes } from \"./ast\";\r\nexport function isText(node) {\r\n    return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\r\n}","import { NodeTypes } from \"../ast\";\r\nimport { isText } from \"../utils\";\r\n\r\nexport function transformText(node, context) {\r\n    if(node.type === NodeTypes.ELEMENT) {\r\n        return () => {\r\n            //比如hi,{{msg}}\r\n            //会生成两个节点，一个是text,一个是interpolation\r\n            //涉及到一个'+'操作符\r\n            //检测下一个节点是不是text类型，是的话就创建一个COMPOUND类型\r\n            //COMPOUND类型把2个text||interpolation包裹\r\n            const children = node.children\r\n            let currentContainer\r\n            for(let i = 0;i < children.length;i++) {\r\n                const child = children[i]\r\n                //如果当前节点时text\r\n                if(isText(child)){\r\n                    for(let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j]\r\n                        //如果下一个节点也是text类\r\n                        if(isText(next)){\r\n                            //currentContainer的目的是把相邻结点都放到一个容器\r\n                            if(!currentContainer){\r\n                                currentContainer = children[i] = {\r\n                                    type: NodeTypes.COMPOUND_EXPRESSION,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                }\r\n                            }\r\n                            currentContainer.children.push(` + `, next)\r\n                            //把当前结点放到容器，然后删除j\r\n                            children.splice(j,1)\r\n                            j--\r\n                        }else {\r\n                            currentContainer = undefined\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n               \r\n            }\r\n        }\r\n    }\r\n}","import { CREATE_ELEMENT_VNODE } from \"./runtimeHelpers\"\r\nexport const enum NodeTypes {\r\n    TEXT,\r\n    ROOT,\r\n    INTERPOLATION,\r\n    SIMPLE_EXPRESSION,\r\n    ELEMENT,\r\n    COMPOUND_EXPRESSION\r\n}\r\nexport const enum ElementTypes {\r\n    ELEMENT,\r\n}\r\nexport function createSimpleExpression(content) {\r\n    return {\r\n        type: NodeTypes.SIMPLE_EXPRESSION,\r\n        content,\r\n    }\r\n}\r\nexport function createInterpolation(content) {\r\n    return {\r\n        type: NodeTypes.INTERPOLATION,\r\n        content: content\r\n    }\r\n}\r\n\r\nexport function createVNodeCall(context, tag, props?,children?) {\r\n    if(context){\r\n        context.helper(CREATE_ELEMENT_VNODE)\r\n    }\r\n    return {\r\n        //mini-vue暂时没实现block,创建element类型\r\n        type: NodeTypes.ELEMENT,\r\n        tag,\r\n        props,\r\n        children\r\n    }\r\n}","import { createVNodeCall } from \"../ast\"\r\nimport { NodeTypes } from \"../ast\"\r\nexport function transformElement(node, context) {\r\n    if(node.type === NodeTypes.ELEMENT) {\r\n        return () => {\r\n            const vnodeTag = `'${node.tag}'`\r\n            //暂时不支持props\r\n            let vnodeProps = null \r\n            let vnodeChildren = null\r\n            if(node.children.length > 0) {\r\n                if(node.children.length === 1) {\r\n                    const child = node.children[0]\r\n                    vnodeChildren = child\r\n                }/*else {\r\n                    vnodeChildren=[]\r\n                    for(let child of node.children){\r\n                        vnodeChildren?.push(child)\r\n                    }\r\n                }*/\r\n            }\r\n            node.codegenNode = createVNodeCall(\r\n                context,\r\n                vnodeTag,\r\n                vnodeProps,\r\n                vnodeChildren\r\n            )\r\n\r\n        }\r\n    }\r\n}","import { ElementTypes, NodeTypes } from \"./ast\"\r\n\r\nconst enum TagType {\r\n    Start,\r\n    End\r\n}\r\nexport function baseParse(content: string) {\r\n    const context = createParserContext(content)\r\n    return createRoot(parseChildren(context,[]))\r\n}\r\nfunction createParserContext(content) {\r\n    console.log(\"创建parserContext\")\r\n    return {\r\n        source: content\r\n    }\r\n}\r\nfunction parseChildren(context,ancestors) {\r\n    console.log(\"开始解析children\")\r\n    const nodes: any =[]\r\n    while(!isEnd(context,ancestors)) {\r\n        let node \r\n        const s = context.source\r\n        if(startWith(s,\"{{\")) {\r\n            //看看如果是{{开头 就是插值，解析\r\n            node = parseInterpolation(context)\r\n        }else if(s[0] === '<') {\r\n            if(s[1] === '/') {\r\n                //处理结束标签\r\n                if(/[a-z]/i.test(s[2])) {\r\n                    //匹配</div>\r\n                    parseTag(context, TagType.End)\r\n                    continue;\r\n                }\r\n            }else if(/[a-z]/i.test(s[1])) {\r\n                node = parseElement(context, ancestors)\r\n            }\r\n        }\r\n        if(!node) {\r\n            node = parseText(context)\r\n        }\r\n        nodes.push(node)\r\n    }\r\n    return nodes\r\n}\r\n\r\nfunction createRoot(children){\r\n    return {\r\n        type: NodeTypes.ROOT,\r\n        children,\r\n        helpers: []\r\n    }\r\n}\r\nfunction isEnd(context: any, ancestors) {\r\n    //检测标签的节点\r\n    //如果是结束标签，看看之前有没有开始标签，如果有，返回true\r\n    const s = context.source\r\n    if(context.source.startsWith(\"</\")) {\r\n        //从后往前查,检查结尾标签和开始会标签是否一致\r\n        for(let i = ancestors.length-1; i >= 0; i--) {\r\n            if(startWithEndTagOpen(s,ancestors[i].tag)) {\r\n                return true\r\n            }\r\n        }\r\n    }\r\n    return !context.source\r\n}\r\nfunction parseInterpolation(context) {\r\n    //1. 先获取到结束的index\r\n    //2. 通过closeIndex - startIndex获取到内容长度contextLength\r\n    //3.通过slice截取内容\r\n    const openDelimiter = \"{{\"\r\n    const closeDelimiter = \"}}\"\r\n    //从{{开始检索\r\n    const closeIndex = context.source.indexOf(\r\n        closeDelimiter,\r\n        openDelimiter.length\r\n    )\r\n    //代码前进2个长度，可以把{{干掉\r\n    advanceBy(context,2)\r\n    \r\n    const rawContentLenth = closeIndex - openDelimiter.length\r\n    const rawContent = context.source.slice(0,rawContentLenth)\r\n    //进入parseData 移动光标消费data字符\r\n    const preTrimContent = parseTextData(context,rawContentLenth)\r\n    const content = preTrimContent.trim()\r\n    //代码前进2个长度 可以把}}干掉\r\n    advanceBy(context, closeDelimiter.length)\r\n    return {\r\n        type: NodeTypes.INTERPOLATION,\r\n        content: {\r\n            type: NodeTypes.SIMPLE_EXPRESSION,\r\n            content\r\n        }\r\n    }\r\n}\r\n\r\nfunction parseTag(context: any,type: TagType): any {\r\n    //exec方法中返回的第一项是完全匹配成功的文本，后序每项是一个匹配的捕获组，\r\n    const match: any = /^<\\/?([a-z][^\\r\\n\\t\\f />]*)/i.exec(context.source)\r\n    //匹配到第一个捕获组，标签名\r\n    const tag = match[1]\r\n    //移动光标\r\n    advanceBy(context,match[0].length)\r\n    //先不处理selfClose,移动一个光标>\r\n    advanceBy(context,1)\r\n    if(type === TagType.End)return\r\n    let tagType = ElementTypes.ELEMENT\r\n    return {\r\n        type: NodeTypes.ELEMENT,\r\n        tag,\r\n        tagType\r\n    }\r\n}\r\n\r\nfunction parseElement(context, ancestors) {\r\n    //<div></div>\r\n    //先解析tag\r\n    const element = parseTag(context,TagType.Start)\r\n    //回溯\r\n    ancestors.push(element)\r\n    const children = parseChildren(context, ancestors)\r\n    ancestors.pop()\r\n    //消费到只剩下endTag\r\n    if(startWithEndTagOpen(context.source,element.tag)) {\r\n        parseTag(context,TagType.End)\r\n    }else {\r\n        throw new Error(`缺失结束标签：${element.tag}`)\r\n    }\r\n    element.children = children\r\n    return element\r\n}\r\nfunction parseText(context) {\r\n    const endTokens = [\"<\", \"{{\"]\r\n    let endIndex = context.source.length\r\n    for(let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i])\r\n        //endIndex要尽量小\r\n        if(index !== -1 && endIndex > index) {\r\n            endIndex = index\r\n        }\r\n    }\r\n    const content = parseTextData(context, endIndex)\r\n    return {\r\n        type: NodeTypes.TEXT,\r\n        content\r\n    }\r\n}\r\n\r\nfunction parseTextData(context: any, length: number): any {\r\n    const rawText = context.source.slice(0,length)\r\n    advanceBy(context,length)\r\n    return rawText\r\n}\r\n\r\nfunction advanceBy(context, len) {\r\n    context.source = context.source.slice(len)\r\n}\r\n\r\nfunction startWithEndTagOpen(source: string, tag: string) {\r\n    return (\r\n        startWith(source,'</') && \r\n        source.slice(2,2+tag.length).toLowerCase() === tag.toLowerCase()\r\n    )\r\n}\r\n\r\nfunction startWith(source: string, searchString: string): boolean {\r\n    return source.startsWith(searchString)\r\n}","import { generate } from \"./codegen\"\r\nimport { transform } from \"./transform\"\r\nimport { transformExpression } from \"./transforms/transformExpression\"\r\nimport { transformText } from \"./transforms/transformText\"\r\nimport { transformElement } from \"./transforms/transfromElement\"\r\nimport { baseParse } from \"./parse\"\r\nexport function baseCompile(template,options) {\r\n    const ast = baseParse(template)\r\n    //ast进行转换\r\n    transform(ast,\r\n        Object.assign(options,{\r\n            nodeTransforms: [transformElement,transformText,transformExpression]\r\n        })\r\n    )\r\n    //生成render函数代码\r\n    return generate(ast) \r\n}","//这个文件即vue模块\r\nimport * as runtimeDom from \"@mini-vue3/runtime-dom\"\r\nimport { registerRuntimeCompiler } from \"@mini-vue3/runtime-dom\"\r\nimport { baseCompile } from \"@mini-vue3/compiler-core\"\r\nexport * from \"@mini-vue3/runtime-dom\"\r\n\r\nfunction compileToFunction(template,options={}){\r\n    const { code } = baseCompile(template, options)\r\n    //调用compiler得到的代码封装在函数内\r\n    //这里依赖runtimeDom的一些函数，所以通过参数的形式注入\r\n    const render = new Function(\"Vue\", code)(runtimeDom)    \r\n    return render\r\n}\r\nregisterRuntimeCompiler(compileToFunction)"],"names":[],"mappings":"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"}